[pos]
# default = samsung
type = samsung
# optional may be specified on the command line
# serialport = /dev/pts11
[scale]
# no default, if you wish to define your own give the name here
# otherwise use the built-in types magellan, pc-100
# There is also a dummy type for testing with no scale attached
# It will return random weights in k or lb
# comment out  the next line (if defined on command line) 
# or set your own value
type = example
# If you use the bult-in types the following two values 
# need to be set here or on command line
# All other values are already defined for you
# optional may be specified on the command line
# serialport = /dev/ttyS4
# optional may be specified on the command line
#weight-unit=k

#########################################
#                                       #                        
#       Example scale definition.       #
#                                       #                                     
#########################################

# serial device takes the following:
#    seriaport. e.g. /dev/ttyS3, /dev/pts/16
#    Speed (speed) in baud. Default is 9600
#    Byte Size in bits (byte-size). 5,6,7,8 default is 8, 7 is also used in 
#    scales and represents true ascii. 8 is the modern standard.
#    Device Parity (parity): Can be none, even,odd, mark or space. Typically
#    the first 3. A crude form of error checking. Odd means there are always an
#    odd number of ones in the byte.
#    Stop Bit (stop-bit): 1,2, or 1.5. 1.5 is read as 2 in posix compliant 
#    systems. Normally 1. Sent at the end of a character to allow the hardware 
#    to dectect the end of the character and resynchronize. 
#    Flow Control can be none (default) or hardware or software. Pyserial uses
#    xonoxoff=1 for software control rtscts or dsrdtr for the diferent types of#    hardware control. Not used here at the moment 

#   The following are specific to scale definitions.
#    terminator: sent by the scales to mark the end of the message.
#        Values include  ASCII carriage return (CR) 0x0E, 
#                        ASCII  Record Separator (RS) 0x1E.
#    start: as above to mark the beginning of a message. Defaults to None
#    weight-request. Scales operate by receiving single characters as commands.
#        This is the character that initiates a weight request.   
#    weight-unit , k, g, lb


[example]
# Typical settings to configure serial port.The values given are defaults
# for typical serial devices. N.B. Scales seems to use
# parity=even, byte-size=7 from what I can tell
.
speed=9600
byte-size=8
parity=none
stop-bit=1
# N.B.

# scale specific. There are no defaults, unless specified. Required
# one of k (kilos) g (grammes) or lb (pounds). Defaults to k
weight-unit=k

# The following defines an interface type i.e. what signal the scale
# expects to return a weight and how it returns that.
# At present toledo (Toledo 8132)and sasi (SASI RS-232)
# are supported, NCI to be added
# defaults to sasi
interface=sasi

#  INFORMATIONAL ONLY

# toledo returns <STX>XXXXX<CR>
# Where XXXXX is a weight value .
# if in kilos it returns 5 digits without a decimal point
# padded by zeroes if necessary I.E. Grammes
# if weighing in pounds it returns 5 digits, padded to zeroes 
# to two decimal places but no decimal point
# e.g. If weight is 21.30 lb it returns 02130

# sasi returns 5 bytes representing the weight with a decimal point
# STX, W5, W4, '.', W3 , W2, W1, CR (Kilograms mode)
# STX, '0', W4, W3 , '.', W2, W1, CR (Pounds mode)

# Builtin types:
# Magellan uses SASI
# PC-100 uses Toledo
# You will need to ensure your scale is set up correctly


# ASCII symbols may be given for the following(see http://www.ascii-code.com/)
# or hex equivalents written as e.g. \x05
# These are normally determined by the interface type and should not be set
#terminator=CR
#start=STX
#weight-request=W
#uses-decimal=true
